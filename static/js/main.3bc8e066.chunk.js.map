{"version":3,"sources":["Component/About.js","Component/Navbar.js","Component/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","Fragment","class","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","className","react_router_dom","to","title","aria-label","aria-current","about","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","head","htmlfor","value","onChange","event","console","log","target","rows","onClick","newText","toUpperCase","toLowerCase","split","length","trim","App","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3bc8e066.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <div class=\"accordion\" id=\"accordionExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingThree\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    \r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav mx-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n  \r\n        \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    </>\r\n  )\r\n}\r\n//so we can simple say this is the vaildation of the props \r\nNavbar.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string.isRequired\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleOnClick = () => {\r\n        console.log(\"Upper case \")\r\n        let newText = text.toUpperCase();\r\n        setText(newText)//convert upper case the exit values\r\n    }\r\n    const cclick = () => {\r\n        console.log(\"Upper case \")\r\n        let newText = text.toLowerCase()\r\n        setText(newText)//convert upper case the exit values\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"onChange\")\r\n        //event.target.value is enable to value enter your text area\r\n    \r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <h1 >{props.head}</h1>\r\n                <div className=\"mb-3  mt-3 \">\r\n                    <label htmlfor=\"box\" className=\"form-label\"></label>\r\n                    <textarea className=\"form-control\" id=\"box\" value={text} onChange={handleOnChange} rows=\"5\"></textarea>\r\n                </div>\r\n                <button className=\"  btn btn-primary\" onClick={handleOnClick}>Convert Upper Case</button>\r\n                <button className=\"  mx-2 btn btn-primary\" onClick={cclick}>Convert Lower  Case</button>\r\n            </div>\r\n            <div className=\"contaniner my-3\">\r\n                <h4>Your Text summary</h4>\r\n                <p>Your Words is <input type=\"text\"  value={text.split(\" \").length}/> </p>\r\n    <p>Your Character is <input type=\"text\" value={text.trim().length} /></p>\r\n    <p> {0.008 *  text.split(\" \").length} Reading time</p>\r\n    <h5>Preview</h5>\r\n    <p>{text}</p>\r\n\r\n                {/* <p>{text.trim().length} characters</p>\r\n                <p>{text.replace(/\\n/g, \" \").split(' ').filter(value => value != \"\").length} words</p> */}\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","\nimport React from 'react';\n// import Home from './Component/Navbar'\n\nimport About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\n// import {Switch} from \"react-router-dom\"\nimport {\n  \n  Routes,\n  Route,\n  BrowserRouter,\n \n\n} from \"react-router-dom\";\n// import your route components too\n\n\n\nfunction App() {\n  return (\n\n    <React.Fragment>\n\n\n    <BrowserRouter>\n\n\n      {/* <h1 className=\"text-center\">hello Noor welome your first project</h1> */}\n\n      <Navbar title=\"TextUtils\" about=\"TextUtils About\"></Navbar>\n      <div className=\"container my-4\">\n        <Routes>\n          <Route exact path=\"/about\"  element={<About></About>}>\n          \n          </Route>\n          <Route path='/' element={<TextForm head=\"Enter the  Text  to analyze below\" ></TextForm>}>\n\n          </Route>\n        </Routes>\n      </div>\n\n\n\n\n    </BrowserRouter>\n    </React.Fragment>\n\n\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n \n    <App />\n  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}